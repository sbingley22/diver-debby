/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/DiverDebby.glb -s 
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Debby(props) {

  return (
    <Model {...props} />
  )
}

export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/DiverDebby.glb')
  const { actions } = useAnimations(animations, group)

  const rotateModel = useRef(false)
  const anim = useRef("IdleA")
  const animNext = useRef("SwimIdle")

  useFrame(() => {
    if (rotateModel.current) {
      group.current.rotation.y += 0.01
    }

    if (anim.current != animNext.current) {
      actions[anim.current].fadeOut(0.5)
      actions[animNext.current].reset().fadeIn(0.5).play()
      anim.current = animNext.current
    }
  })

  const swapAnimation = () => {
    console.log(anim.current)
    if (anim.current == "SwimIdle") animNext.current = "SwimDolphin"
    else animNext.current = "SwimIdle"
    console.log(animNext.current)
  }

  return (
    <group 
      ref={group} 
      {...props} 
      dispose={null} 
      onPointerOver={()=>rotateModel.current = true}
      onPointerOut={()=>rotateModel.current = false}
      onClick={swapAnimation}
    >
      <group name="Scene">
        <group name="char_grp">
          <group name="rig" rotation={[0, Math.PI, 0]}>
            <primitive object={nodes.c_pos} />
            <primitive object={nodes.c_arms_polel} />
            <primitive object={nodes.c_arms_poler} />
            <primitive object={nodes.c_foot_ikr} />
            <primitive object={nodes.c_leg_poler} />
            <primitive object={nodes.c_foot_ikl} />
            <primitive object={nodes.c_leg_polel} />
            <primitive object={nodes.c_hand_ikr} />
            <primitive object={nodes.c_hand_ikl} />
            <primitive object={nodes.root_refx} />
            <primitive object={nodes.lips_top_refx} />
            <primitive object={nodes.lips_bot_refx} />
            <primitive object={nodes.lips_roll_top_refx} />
            <primitive object={nodes.lips_roll_bot_refx} />
            <primitive object={nodes.jaw_refx} />
            <primitive object={nodes.teeth_bot_refx} />
            <primitive object={nodes.teeth_top_refx} />
            <primitive object={nodes.tong_01_refx} />
            <primitive object={nodes.chin_02_refx} />
            <primitive object={nodes.nose_01_refx} />
            <primitive object={nodes.eye_offset_refl} />
            <primitive object={nodes.c_eye_targetx} />
            <primitive object={nodes.eye_offset_refr} />
            <primitive object={nodes.eyebrow_full_refl} />
            <primitive object={nodes.eyebrow_full_refr} />
            <primitive object={nodes.cheek_smile_refl} />
            <primitive object={nodes.cheek_smile_refr} />
            <group name="BackPack001">
              <skinnedMesh name="Plane051" geometry={nodes.Plane051.geometry} material={materials['backpack.001']} skeleton={nodes.Plane051.skeleton} />
              <skinnedMesh name="Plane051_1" geometry={nodes.Plane051_1.geometry} material={materials.straps} skeleton={nodes.Plane051_1.skeleton} />
            </group>
            <skinnedMesh name="Belt004" geometry={nodes.Belt004.geometry} material={materials['Material.012']} skeleton={nodes.Belt004.skeleton} />
            <group name="divingMask">
              <skinnedMesh name="Plane052" geometry={nodes.Plane052.geometry} material={materials['Material.013']} skeleton={nodes.Plane052.skeleton} />
              <skinnedMesh name="Plane052_1" geometry={nodes.Plane052_1.geometry} material={materials.seethrough} skeleton={nodes.Plane052_1.skeleton} />
            </group>
            <skinnedMesh name="divingPants" geometry={nodes.divingPants.geometry} material={materials['Pants.001']} skeleton={nodes.divingPants.skeleton} />
            <skinnedMesh name="divingTop" geometry={nodes.divingTop.geometry} material={materials.divingTop} skeleton={nodes.divingTop.skeleton} />
            <skinnedMesh name="EyeL" geometry={nodes.EyeL.geometry} material={materials.Eyes} skeleton={nodes.EyeL.skeleton} />
            <skinnedMesh name="EyeR" geometry={nodes.EyeR.geometry} material={materials.Eyes} skeleton={nodes.EyeR.skeleton} />
            <skinnedMesh name="flippers" geometry={nodes.flippers.geometry} material={materials['Material.010']} skeleton={nodes.flippers.skeleton} />
            <skinnedMesh name="Gloves002" geometry={nodes.Gloves002.geometry} material={materials['Gloves.001']} skeleton={nodes.Gloves002.skeleton} />
            <group name="J9LOD0">
              <skinnedMesh name="Plane004" geometry={nodes.Plane004.geometry} material={materials.Skin} skeleton={nodes.Plane004.skeleton} />
              <skinnedMesh name="Plane004_1" geometry={nodes.Plane004_1.geometry} material={materials.Teeth} skeleton={nodes.Plane004_1.skeleton} />
              <skinnedMesh name="Plane004_2" geometry={nodes.Plane004_2.geometry} material={materials.Tongue} skeleton={nodes.Plane004_2.skeleton} />
              <skinnedMesh name="Plane004_3" geometry={nodes.Plane004_3.geometry} material={materials.Eyebrows} skeleton={nodes.Plane004_3.skeleton} />
              <skinnedMesh name="Plane004_4" geometry={nodes.Plane004_4.geometry} material={materials.Eyelashes} skeleton={nodes.Plane004_4.skeleton} />
            </group>
            <skinnedMesh name="ShortStraight" geometry={nodes.ShortStraight.geometry} material={materials['SimHair.006']} skeleton={nodes.ShortStraight.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/DiverDebby.glb')
